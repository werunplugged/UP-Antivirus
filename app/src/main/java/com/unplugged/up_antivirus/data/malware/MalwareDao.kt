package com.unplugged.up_antivirus.data.malware

import androidx.room.*
import kotlinx.coroutines.flow.Flow
import com.unplugged.up_antivirus.data.malware.model.MalwareEntity
import com.unplugged.upantiviruscommon.malware.ThreatStatus


@Dao
interface MalwareDao {
    @Query("SELECT * FROM malwareentity WHERE scanId = :scanId")
    fun getByScanId(scanId: Int): Flow<List<MalwareEntity>>

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    suspend fun insert(malware: MalwareEntity)

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    suspend fun insert(malwares: List<MalwareEntity>)

    @Update
    suspend fun update(malware: MalwareEntity) {
        updateStatusForAllScans(malware.filePath, malware.status)
    }

    @Query("UPDATE MalwareEntity SET status = :status WHERE filePath = :filePath")
    suspend fun updateStatusForAllScans(filePath: String, status: ThreatStatus)

    @Delete
    suspend fun delete(malware: MalwareEntity)

    @Query("DELETE FROM malwareentity WHERE scanId = :scanId")
    suspend fun deleteAllForScan(scanId: Int)

    @Query("DELETE FROM malwareentity")
    suspend fun deleteAll()
}